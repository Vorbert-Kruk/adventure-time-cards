@import './variables.scss';

@mixin flex(
  $direction: column,
  $justifyContent: flex-start,
  $alignItems: stretch
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justifyContent;
  align-items: $alignItems;
}

@mixin centerAbsolutely($centerDirection: center) {
  position: absolute;

  @if $centerDirection == vertical {
    top: 50%;
    transform: translateY(-50%);
  } @else if $centerDirection == horizontal {
    left: 50%;
    transform: translateX(-50%);
  } @else {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

@mixin statisticColors() {
  $color-key-name: 'color';
  $opaque-color-key-name: 'opaque-color';
  $colors: (
    'orange': (
      $color-key-name: $orange-color,
      $opaque-color-key-name: $orange-opaque-color,
    ),
    'green': (
      $color-key-name: $green-color,
      $opaque-color-key-name: $green-opaque-color,
    ),
    'red': (
      $color-key-name: $red-color,
      $opaque-color-key-name: $red-opaque-color,
    ),
  );

  @each $colorName, $colorValues in $colors {
    &_#{$colorName} {
      --#{$color-key-name}: #{map-get($colorValues, $color-key-name)};
      --#{$opaque-color-key-name}: #{map-get(
          $colorValues,
          $opaque-color-key-name
        )};
    }
  }
}
